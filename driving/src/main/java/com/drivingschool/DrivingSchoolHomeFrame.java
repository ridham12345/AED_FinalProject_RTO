/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.drivingschool;

import com.customer.*;
import CustomerHome.ApplyDao;
import CustomerHome.ApplyModel;
import CustomerHome.StatusDao;
import CustomerHome.StatusModel;
import CustomerHome.TestDao;
import CustomerHome.TestModel;
import DrivingSchoolHome.ApplicantDao;
import DrivingSchoolHome.ApplicantModel;
import DrivingSchoolHome.OffDaysModel;
import DrivingSchoolHome.VehicleModel;
import com.gi.login.DrivingSchoolLogin.DrivingSchoolLoginDao;
import com.gi.login.LoginFrame;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.sql.SQLException;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author acer
 */
public class DrivingSchoolHomeFrame extends javax.swing.JFrame {

    /**
     * Creates new form CustomerHomeFrame
     */
    int did;
    String dname;
    List<StatusModel> tv = null;
    List<ApplyModel> tv1 = null;
    List<TestModel> tv2 = null;
    List<VehicleModel> tv3 = null;
    List<OffDaysModel> tv4 = null;
//    List<ApplicantModel> tv5 = null;
    List<ApplicantDetails> tv5 = null;

    public DrivingSchoolHomeFrame() {
        initComponents();
    }

    public DrivingSchoolHomeFrame(int did, String dname) {
        initComponents();

        this.did = did;
        this.dname = dname;
        drivingschoolLabel.setText(dname);

        tableDecoration(todaysTestTable);
        tableDecoration(applicantTable2);
        tableDecoration(completeTestTable);
        try {
            applicantTableData();
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(this, ex.getMessage());
        }
    }

    void tableDecoration(javax.swing.JTable jtable) {
        JTableHeader tableHeader2 = jtable.getTableHeader();
        tableHeader2.setBackground(Color.red);
        tableHeader2.setForeground(Color.white);
        Font headerFont2 = new Font("Verdana", Font.BOLD, 16);
        tableHeader2.setFont(headerFont2);
        tableHeader2.setPreferredSize(new Dimension(500, 32));
        jtable.setRowHeight(20);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        drivingschoolLabel = new javax.swing.JLabel();
        btnChangePassword = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        CustomerTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        applicantTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        todaysTestTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        completeTestTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 153, 153));

        drivingschoolLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        drivingschoolLabel.setText("Welcome Driving School");

        btnChangePassword.setText("Change Password");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });

        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drivingschoolLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                .addComponent(btnChangePassword)
                .addGap(18, 18, 18)
                .addComponent(logoutBtn)
                .addGap(2, 2, 2))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(drivingschoolLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChangePassword)
                    .addComponent(logoutBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.PAGE_START);

        CustomerTabbedPane.setName("applied"); // NOI18N
        CustomerTabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerTabbedPaneMouseClicked(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        applicantTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "RegID", "CustomerId", "Customer Name", "Mobile", "Vehicle", "Apply Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        applicantTable2.setShowVerticalLines(true);
        jScrollPane3.setViewportView(applicantTable2);

        jPanel1.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        CustomerTabbedPane.addTab("All Applicants", jPanel1);

        todaysTestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Customer Name", "Mobile", "Vehicle", "Apply Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(todaysTestTable);

        CustomerTabbedPane.addTab("Today's Test", jScrollPane4);

        completeTestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Customer Name", "Mobile", "Vehicle", "Apply Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(completeTestTable);

        CustomerTabbedPane.addTab("Completed Applicants", jScrollPane5);

        getContentPane().add(CustomerTabbedPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        this.setVisible(false);
        LoginFrame lf = new LoginFrame();
        lf.setVisible(true);
        lf.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }//GEN-LAST:event_logoutBtnActionPerformed
    private void applicantTableData() throws Exception {

        ApplicantDao dBOperations1 = new ApplicantDao();

        DefaultTableModel model = (DefaultTableModel) applicantTable2.getModel();
        model.setRowCount(0);
        tv5 = dBOperations1.fetchApplicant();
        for (ApplicantDetails person : tv5) {
            Object[] row = new Object[11];
            ApplicantModel person1 = person.getApplicant();
            row[0] = person.getId();
            row[1] = person1.getId();
            row[2] = person1.getCustomer_name();
            row[3] = person1.getCustomer_contact();
            row[4] = person1.getVehicle();
            row[5] = person1.getApply_date();
            row[6] = person1.getStatus();

            model.addRow(row);
        }
    }

    private void todayTableData() throws Exception {

        LocalDate localDate = LocalDate.now();

        ApplicantDao dBOperations1 = new ApplicantDao();

        DefaultTableModel model = (DefaultTableModel) todaysTestTable.getModel();
        model.setRowCount(0);
        tv5 = dBOperations1.fetchApplicant();
        for (ApplicantDetails person : tv5) {

            ApplicantModel person1 = person.getApplicant();
            String date = person1.getApply_date();

            LocalDate dbDate = LocalDate.parse(date);
            long daysBetween = ChronoUnit.DAYS.between(localDate, dbDate);
            if (daysBetween == 0) {
                Object[] row = new Object[11];
                row[0] = person.getId();
                row[1] = person1.getCustomer_name();
                row[2] = person1.getCustomer_contact();
                row[3] = person1.getVehicle();

                row[4] = date;
                row[5] = person1.getStatus();

                model.addRow(row);
            }
        }
    }

    private void completeTableData() throws Exception {

        LocalDate localDate = LocalDate.now();

        ApplicantDao dBOperations1 = new ApplicantDao();

        DefaultTableModel model = (DefaultTableModel) completeTestTable.getModel();
        model.setRowCount(0);
        tv5 = dBOperations1.fetchApplicant();
        for (ApplicantDetails person : tv5) {

            ApplicantModel person1 = person.getApplicant();
            String date = person1.getApply_date();

            LocalDate dbDate = LocalDate.parse(date);
            long daysBetween = ChronoUnit.DAYS.between(localDate, dbDate);
            if (daysBetween > 0) {
                Object[] row = new Object[11];
                row[0] = person.getId();
                row[1] = person1.getCustomer_name();
                row[2] = person1.getCustomer_contact();
                row[3] = person1.getVehicle();

                row[4] = date;
                row[5] = person1.getStatus();

                model.addRow(row);
            }
        }
    }

    private void CustomerTabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTabbedPaneMouseClicked
        JTabbedPane temp = (JTabbedPane) evt.getSource();
        if (temp.getSelectedIndex() == 0) {
            try {
                applicantTableData();
            } catch (Exception ex) {
                JOptionPane.showConfirmDialog(this, ex.getMessage());
            }
        } else if (temp.getSelectedIndex() == 1) {
            try {
                todayTableData();
            } catch (Exception ex) {
                JOptionPane.showConfirmDialog(this, ex.getMessage());
            }
        } else if (temp.getSelectedIndex() == 2) {
            try {
                completeTableData();
            } catch (Exception ex) {
                JOptionPane.showConfirmDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_CustomerTabbedPaneMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Get the selected row from JTable and put the data into JTextfields
        int i = applicantTable2.getSelectedRow();

        DefaultTableModel model = (DefaultTableModel) applicantTable2.getModel();
        ApplicantModel applicantModel = new ApplicantModel();
        String oldStatus = model.getValueAt(i, 6).toString();

        if (oldStatus.equalsIgnoreCase("Accepted")) {
            JOptionPane.showMessageDialog(this, "You can not change status which is already accepted...");
            return;
        }
        applicantModel.setStatus(oldStatus);
        applicantModel.setVehicle(model.getValueAt(i, 4).toString());
        applicantModel.setCustomer_contact(model.getValueAt(i, 3).toString());
        applicantModel.setCustomer_name(model.getValueAt(i, 2).toString());
        applicantModel.setApply_date(model.getValueAt(i, 5).toString());
        applicantModel.setId(model.getValueAt(i, 1).toString());
        int reg_id = Integer.parseInt(model.getValueAt(i, 0).toString());
        try {
            ApplicantDao applicantDao = new ApplicantDao();
            int n = applicantDao.updateStatus(applicantModel, reg_id);

            if (n > 0) {
                if (oldStatus.equalsIgnoreCase("pending")) {
                    model.setValueAt("Accepted", i, 6);
                    JOptionPane.showMessageDialog(this, "Status updated...");
                }
            } else {
                JOptionPane.showMessageDialog(this, "can not change status,plz try again...");
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "DB related problem,plz contact to admin");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        try {

            String newPassword = JOptionPane.showInputDialog("Enter new passowrd");
            if (newPassword.length() > 0) {
                DrivingSchoolLoginDao dao = new DrivingSchoolLoginDao();
                int n = dao.updatePassword(did, newPassword);

                if (n > 0) {
                    JOptionPane.showMessageDialog(this, "password updated...");

                } else {
                    JOptionPane.showMessageDialog(this, "can not change password,plz try again...");
                }
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "DB related problem,plz contact to admin");
        }
    }//GEN-LAST:event_btnChangePasswordActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane CustomerTabbedPane;
    private javax.swing.JTable applicantTable2;
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JTable completeTestTable;
    private javax.swing.JLabel drivingschoolLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JTable todaysTestTable;
    // End of variables declaration//GEN-END:variables
}
